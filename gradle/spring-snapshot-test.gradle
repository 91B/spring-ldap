configurations {
	springSnapshotTestRuntime.extendsFrom testRuntime
}


configurations.springSnapshotTestRuntime {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.springframework') {
			details.useVersion project.hasProperty('springSnapshotVersion') ? springSnapshotVersion : 'latest.integration'
		}
	}
}

task springSnapshotTest(type: Test) {
	jvmArgs = ['-ea', '-Xmx500m', '-XX:MaxPermSize=128M']
	classpath = sourceSets.test.output + sourceSets.main.output + configurations.springSnapshotTestRuntime
	reports {
		html.destination = project.file("$buildDir/spring-snapshot-test-results/")
		junitXml.destination = project.file("$buildDir/reports/spring-snapshot-tests/")
	}
	doFirst {
		project.springSnapshotTest.excludes = project.test.excludes
	}
}